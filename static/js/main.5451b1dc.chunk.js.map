{"version":3,"sources":["Components/Filter/Filter.module.css","Components/ContactForm/ContactForm.module.css","Components/ContactList/ContactList.module.css","Components/ContactForm/ContactForm.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","ContactForm","state","name","number","handleChange","event","setState","currentTarget","value","handleSubmit","preventDefault","props","onAddContact","Number","className","styles","form","label","type","pattern","title","input","this","onChange","required","btn","onClick","Component","ContactList","contacts","onDeleteContact","list","map","id","item","Filter","App","filter","addContact","some","contact","alert","shortid","generate","prevState","deleteContact","contactId","changeFilter","localStorage","getItem","parsedContacts","JSON","parse","setItem","stringify","totalContactsCount","length","normalizedFilter","toLowerCase","visibleContacts","includes","defaultProps","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5451b1dc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__3h3iM\",\"btn\":\"Filter_btn__1PZZX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__19J_E\",\"label\":\"ContactForm_label__VJSYC\",\"input\":\"ContactForm_input__2U1Cl\",\"btn\":\"ContactForm_btn__1DPqr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__OTJHk\",\"item\":\"ContactList_item__jC1HB\",\"name\":\"ContactList_name__-sabD\",\"btn\":\"ContactList_btn__1shYP\"};","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n      static propTypes = {\r\n        name: PropTypes.string,\r\n        number: PropTypes.number,\r\n      };\r\n\r\n    state = {\r\n        name: '',\r\n        number: '',\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        this.setState({[event.currentTarget.name]: event.currentTarget.value})\r\n    }\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        this.props.onAddContact(this.state.name, Number(this.state.number));\r\n        this.setState({ name: '', number: '' });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <form className={styles.form} >\r\n                <label className={styles.label}>Name: \r\n                    <input type=\"text\" name=\"name\" pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\" title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\" \r\n                    className={styles.input}\r\n                    value={this.state.name}\r\n                    onChange={this.handleChange}\r\n                    required />\r\n                </label>\r\n                <label className={styles.label}>Number: \r\n                    <input type=\"tel\" name=\"number\"\r\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                    className={styles.input} value={this.state.number} onChange={this.handleChange} required />\r\n                </label>\r\n                <button type=\"button\" \r\n                className={styles.btn} onClick={this.handleSubmit}>\r\n                    Add contact\r\n                </button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ContactForm;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactList.module.css';\r\n\r\nconst ContactList =  ({ contacts, onDeleteContact }) => (\r\n    <ul className={styles.list}>\r\n        {contacts.map( ({ id, name, number }) => (\r\n            <li key={id} className={styles.item}>\r\n                <p className={styles.name}>{name}: <span>{number}</span></p>\r\n                <button type=\"button\" className={styles.btn} onClick={()=> onDeleteContact(id)}>Delete</button>\r\n            </li>\r\n        ) )\r\n        }\r\n    </ul>\r\n);\r\nContactList.propTypes = {\r\n    id: PropTypes.any,\r\n    name: PropTypes.string,\r\n    number: PropTypes.string,\r\n}\r\n\r\nexport default ContactList;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Filter.module.css';\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n    <label className={styles.label}>\r\n        Find contacts by name\r\n        <input className={styles.input} type=\"text\" value={value} onChange={onChange}/>\r\n    </label>\r\n);\r\nFilter.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n}\r\nexport default Filter;","import React, { Component } from 'react';\r\nimport shortid from 'shortid';\r\nimport PropTypes from 'prop-types';\r\nimport './App.css';\r\n\r\nimport ContactForm from './Components/ContactForm';\r\nimport ContactList from './Components/ContactList';\r\nimport Filter from './Components/Filter';\r\n\r\nclass App extends Component {\r\n  static defaultProps = {\r\n    totalContactsCount: null,\r\n    visibleContacts: null,\r\n  }\r\n  static propTypes = {\r\n    contacts: PropTypes.arrayOf(\r\n      PropTypes.shape(\r\n        {\r\n          id: PropTypes.any.isRequired,\r\n          name: PropTypes.string.isRequired,\r\n          number: PropTypes.string.isRequired,\r\n        })\r\n    ),\r\n    filter: PropTypes.string,\r\n    totalContactsCount: PropTypes.number,\r\n    visibleContacts: PropTypes.number,\r\n  };\r\n  state = {\r\n    contacts: [\r\n      {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\r\n      {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\r\n      {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\r\n      {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\r\n    ],\r\n    filter: '',\r\n  };\r\n\r\n  addContact = (name, number) => {\r\n    const isInContacts = this.state.contacts.some(contact => contact.name === name)\r\n    if (isInContacts) { alert(`${name} is already in contacts.`); return }\r\n\r\n    if (name && number) {\r\n      const contact = {\r\n        id: shortid.generate(),\r\n        name,\r\n        number,\r\n      };\r\n      this.setState(prevState => ({\r\n        contacts: [contact, ...prevState.contacts],\r\n      }));\r\n    }\r\n  };\r\n\r\n  deleteContact = (contactId => {\r\n    this.setState( prevState => ({\r\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId)}))\r\n    }\r\n  );\r\n\r\n  changeFilter = event => {\r\n    this.setState({ filter: event.currentTarget.value })\r\n  }\r\n\r\n  componentDidMount() {\r\n    const contacts = localStorage.getItem('contacts');\r\n    const parsedContacts = JSON.parse(contacts);\r\n    if (parsedContacts) {\r\n      this.setState( {contacts: parsedContacts});\r\n    }\r\n  }\r\n    \r\n  componentDidUpdate(prevState) {\r\n    if (this.state.contacts !== prevState.contacts) {\r\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { contacts, filter } = this.state;\r\n    const totalContactsCount = contacts.length;\r\n\r\n    const normalizedFilter = this.state.filter.toLowerCase();\r\n    const visibleContacts = this.state.contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter),);\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <h1>Phonebook</h1>\r\n        <ContactForm contacts={contacts} onAddContact={this.addContact} />\r\n\r\n        <h2>Contacts (total: {totalContactsCount}) </h2>\r\n        <Filter value={filter} onChange={this.changeFilter}/>\r\n        <ContactList contacts={visibleContacts} onDeleteContact={this.deleteContact} />\r\n      </div>        \r\n    );\r\n  }  \r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}